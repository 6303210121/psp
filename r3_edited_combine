
package main

import (
	"fmt"
	"os/exec"
	"strings"
	"testing"
)

func TestConnectToRouter(t *testing.T) {
	// Command to list available containers
	psCommand := "docker ps"

	// Execute the command to list available containers
	psOutput, err := exec.Command("/bin/sh", "-c", psCommand).CombinedOutput()
	if err != nil {
		t.Fatalf("Error executing docker ps command: %v", err)
	}

	// Print the output of the docker ps command
	fmt.Println("Available containers:")
	fmt.Println(string(psOutput))

	// Command to log in to bash shell of the container
	loginCommand := "docker exec clab-frrlab-router2 /bin/bash"

	// Execute the command to log in to the bash shell of the container
	loginOutput, err := exec.Command("/bin/sh", "-c", loginCommand).CombinedOutput()
	if err != nil {
		t.Fatalf("Error logging in to the container: %v", err)
	}

	// Print the output of the login command
	fmt.Println("Login output:")
	fmt.Println(string(loginOutput))

	// Command to log in to vtysh and execute commands
	vtyshCommands := `
		vtysh
		configure terminal
		interface eth1
		no IP address 192.168.2.2
		end
		show interface brief
		exit
	`

	// Execute the commands within the container's environment
	vtyshOutput, err := exec.Command("/bin/sh", "-c", loginCommand+" -c '"+strings.ReplaceAll(vtyshCommands, "\n", ";")+"'").CombinedOutput()
	if err != nil {
		t.Fatalf("Error executing vtysh commands: %v", err)
	}

	// Print the output of the vtysh commands
	fmt.Println("vtysh output:")
	fmt.Println(string(vtyshOutput))
}

package main

import (
	"fmt"
	"testing"
)

// Mock interfaces for testing
type RouterClient interface {
	Login(username, password string) (bool, error)
	SendCommand(string) (string, error)
}

type MockRouterClient struct {
	loggedIn bool
}

func (m *MockRouterClient) Login(username, password string) (bool, error) {
	// Simulate successful login (replace with actual validation logic)
	if username == "tcs" && password == "tcs@123" {
		m.loggedIn = true
		return true, nil
	}
	return false, fmt.Errorf("Invalid username or password")
}

func (m *MockRouterClient) SendCommand(command string) (string, error) {
	// Simulate successful commands for logged in user
	if !m.loggedIn {
		return "", fmt.Errorf("Not logged in")
	}
	switch command {
	case "vtysh":
		// Simulate a specific vtysh output (replace with desired output)
		return "Entering vtysh mode...\nRouter#", nil
	case "config":
		// Simulate a specific config output (replace with desired output)
		return "Entering configuration mode...\nRouter(config)#", nil
	default:
		return "", fmt.Errorf("Unsupported command: %s", command)
	}
}

func TestRouterLoginAndConfig(t *testing.T) {
	// Use mock client for testing
	client := &MockRouterClient{}

	// Login with placeholders (replace with actual credentials during testing)
	loggedIn, err := client.Login("tcs", "tcs@123")
	if err != nil {
		t.Errorf("Login failed: %v", err)
		return
	}
	if !loggedIn {
		t.Errorf("Login unsuccessful")
	}

	// Send commands (simulated)
	fmt.Println("Sending command: vtysh")
	output, err := client.SendCommand("vtysh")
	if err != nil {
		t.Errorf("vtysh command failed: %v", err)
	} else {
		fmt.Println(output) // Print simulated vtysh entry message
	}

	fmt.Println("Sending command: config")
	output, err = client.SendCommand("config")
	if err != nil {
		t.Errorf("config command failed: %v", err)
	} else {
		fmt.Println(output) // Print simulated config mode entry message
	}

	// Success message
	fmt.Println("Successfully logged in and sent commands (simulated)")

====================================================================================================================================================
o test t2_test.go -v
=== RUN   TestRouterLoginAndConfig
Sending command: vtysh
Entering vtysh mode...
Router#
Sending command: config
Entering configuration mode...
Router(config)#
Successfully logged in and sent commands (simulated)
--- PASS: TestRouterLoginAndConfig (0.00s)
PASS
ok  	command-line-arguments	0.002s
